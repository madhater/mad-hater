name: Build
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release-version.outputs.result }}

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
      
    - name: npm install
      run: npm ci

    - name: npm test
      run: npm run test:build

    - name: npm run build
      run: npm run build

    - name: Get Release Version
      id: release-version
      uses: actions/github-script@v7
      with: 
        result-encoding: string
        script: |
          const getIncrementType = () => {
            const message = context.payload.head_commit.message;
            if (message.startsWith('MAJOR')) {
              return 'MAJOR';
            } else if (message.startsWith('MINOR')) {
              return 'MINOR';
            }
            return 'PATCH';
          }
          const incrementType = getIncrementType();
          try {
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const tagName = latestRelease.data.tag_name;
            let [major, minor, patch] = tagName.replace('v', '').split('.').map(Number);
            if (incrementType === 'MAJOR') {
              major++;
            } else if (incrementType === 'MINOR') {
              minor++;
            } else {
              patch++;
            }
            return `${major}.${minor}.${patch}`;
          } catch(e) {
            console.log(e);
            return '1.0.0';
          }

    - name: Add package.json
      run: |
        cat > dist/mad-hater/package.json << EOF
        {
          "version": "${{ steps.release-version.outputs.result }}",
          "engines": {
            "node": "20.x"
          },
          "scripts": {
            "start": "node server/server.mjs"
          }
        }
        EOF
    
    - name: Publish Release
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: |
        gh release create "v${{ steps.release-version.outputs.result }}" --draft=false
        cd dist/mad-hater
        zip -r ../mad-hater.zip *
        cd ../../
        gh release upload "v${{ steps.release-version.outputs.result }}" dist/mad-hater.zip

  deploy:
    needs: build
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      tag: "v${{ needs.build.outputs.version }}"

